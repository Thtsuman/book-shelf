{"version":3,"sources":["context/themeContext.jsx","components/navbar/navbar.component.jsx","components/card/card.component.jsx","context/bookContext.jsx","components/cards/cards.components.jsx","App.jsx","index.js"],"names":["themeContext","React","createContext","ThemeProvider","state","currentTheme","dark","navBgColor","bgColor","cardColor","titleColor","subtitleColor","normalTextColor","btnColor","hoverBtnColor","green","red","blue","handleTheme","onChangeTheme","themeName","setState","Provider","value","this","props","children","Component","Navbar","isOpen","changeIsOpenHandler","className","Consumer","onClick","viewBox","xmlns","d","href","Card","name","description","tags","author","picUrl","listTags","map","tag","key","src","alt","substr","bookContext","BookProvider","Data","DATA","Cards","Fragment","books","book","id","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.3579eccc.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const themeContext = React.createContext();\n\nclass ThemeProvider extends React.Component {\n  state = {\n    currentTheme: \"red\",\n    dark: {\n      navBgColor: \"bg-gray-900\",\n      bgColor: \"bg-gray-900\",\n      cardColor: \"bg-gray-800\",\n      titleColor: \"text-gray-300\",\n      subtitleColor: \"text-blue-500\",\n      normalTextColor: \"text-gray-600\",\n      btnColor: \"bg-gray-900\",\n      hoverBtnColor: \"bg-gray-700\"\n    },\n    green: {\n      navBgColor: \"bg-green-500\",\n      bgColor: \"bg-green-100\",\n      cardColor: \"\",\n      titleColor: \"text-gray-800\",\n      subtitleColor: \"text-blue-500\",\n      normalTextColor: \"text-gray-600\",\n      btnColor: \"bg-green-600\",\n      hoverBtnColor: \"bg-green-500\"\n    },\n    red: {\n      navBgColor: \"bg-red-500\",\n      bgColor: \"bg-blue-100\",\n      cardColor: \"\",\n      titleColor: \"text-gray-800\",\n      subtitleColor: \"text-blue-500\",\n      normalTextColor: \"text-gray-600\",\n      btnColor: \"bg-red-600\",\n      hoverBtnColor: \"bg-red-500\"\n    },\n    blue: {\n      navBgColor: \"bg-blue-500\",\n      bgColor: \"\",\n      cardColor: \"bg-blue-100\",\n      titleColor: \"text-gray-800\",\n      subtitleColor: \"text-blue-500\",\n      normalTextColor: \"text-gray-600\",\n      btnColor: \"bg-blue-600\",\n      hoverBtnColor: \"bg-blue-500\"\n    }\n  };\n\n  handleTheme = currentTheme => {\n    const { ...currentAppliedTheme } = this.state;\n    return currentAppliedTheme[currentTheme];\n  };\n\n  onChangeTheme = themeName => {\n    this.setState({\n      currentTheme: themeName\n    });\n  };\n\n  render() {\n    return (\n      <themeContext.Provider\n        value={{\n          state: this.handleTheme(this.state.currentTheme),\n          onChangeTheme: this.onChangeTheme\n        }}\n      >\n        {this.props.children}\n      </themeContext.Provider>\n    );\n  }\n}\n\nexport default ThemeProvider;\n","import React from \"react\";\n\nimport { themeContext } from \"../../context/themeContext\";\n\nclass Navbar extends React.Component {\n  state = {\n    isOpen: false\n  };\n\n  changeIsOpenHandler = () => {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"navbar sticky top-0 w-full \">\n        <themeContext.Consumer>\n          {({ state }) => (\n            <nav\n              className={` ${state.navBgColor} items-center justify-between flex-wrap p-1 shadow-xl`}\n            >\n              <div className=\"container flex p-3 md:p-1 mx-auto justify-between flex-wrap\">\n                <div className=\"flex items-center flex-shrink-0 text-white mr-6\">\n                  <span className=\"font-semibold text-xl tracking-tight\">\n                    Book Shelf\n                  </span>\n                </div>\n                <div className=\"block lg:hidden\">\n                  <button\n                    onClick={() => this.changeIsOpenHandler()}\n                    className=\"flex items-center px-3 py-2 border rounded text-gray-200 border-gray-400 hover:text-white hover:border-gray-200\"\n                  >\n                    <svg\n                      className=\"fill-current h-3 w-3\"\n                      viewBox=\"0 0 20 20\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                      <title>Menu</title>\n                      <path d=\"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z\" />\n                    </svg>\n                  </button>\n                </div>\n                <div\n                  className={`${\n                    this.state.isOpen ? \"block\" : \"hidden\"\n                  } w-full flex-grow lg:flex lg:items-center lg:w-auto my-5`}\n                >\n                  <div className=\"text-sm lg:flex-grow\">\n                    <a\n                      href=\"#about\"\n                      className=\"block font-bold lg:inline-block lg:mt-0 text-gray-300 hover:text-white mr-4\"\n                    >\n                      About Us\n                    </a>\n                    <a\n                      href=\"#admin\"\n                      className=\"block font-bold lg:inline-block lg:mt-0 text-gray-300 hover:text-white mr-4\"\n                    >\n                      Admin\n                    </a>\n                  </div>\n                </div>\n              </div>\n            </nav>\n          )}\n        </themeContext.Consumer>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import React from \"react\";\n\nimport { themeContext } from \"../../context/themeContext\";\n\nconst Card = ({ name, description, tags, author, picUrl }) => {\n  const listTags = tags.map((tag, key) => (\n    <span\n      key={key}\n      className=\"inline-block bg-purple-600 rounded-full px-3 py-1 text-sm font-semibold text-gray-200 mr-2\"\n    >\n      #{tag}\n    </span>\n  ));\n\n  return (\n    <div className=\"card px-2 sm:w-1/2 md:w-1/3 mb-3\">\n      <themeContext.Consumer>\n        {({ state }) => (\n          <div className={`rounded bg-gray-200 shadow ${state.cardColor}`}>\n            <div className=\"md:flex-shrink p-5\">\n              <img\n                className=\"rounded-lg shadow mx-auto h-40\"\n                src={picUrl}\n                alt=\"Woman paying for a purchase\"\n              />\n            </div>\n            <div className=\"px-6 py-4\">\n              <div className={`${state.titleColor} font-bold text-xl`}>\n                {name}\n              </div>\n              <div className={`${state.subtitleColor} font-bold text-md mb-2`}>\n                by {author}\n              </div>\n              <p className={`${state.normalTextColor} text-md`}>\n                {description.substr(0, 150)}...\n              </p>\n            </div>\n            <div className=\"lg:flex justify-between\">\n              <div className=\"px-6 lg:py-4 pt-2\">{listTags}</div>\n              <div className=\"px-6 lg:py-4 py-4\">\n                <button\n                  className={`w-full inline-block ${state.btnColor} hover:${state.hoverBtnColor} shadow-lg rounded-lg px-4 py-2 text-md font-semibold text-gray-200 mr-2`}\n                >\n                  Read More\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </themeContext.Consumer>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport DATA from \"../data.json\";\n\nexport const bookContext = React.createContext();\n\nclass BookProvider extends React.Component {\n  state = {\n    Data: DATA\n  };\n\n  render() {\n    return (\n      <bookContext.Provider\n        value={{\n          state: this.state\n        }}\n      >\n        {this.props.children}\n      </bookContext.Provider>\n    );\n  }\n}\n\nexport default BookProvider;\n","import React from \"react\";\nimport Card from \"../card/card.component\";\nimport { bookContext } from \"../../context/bookContext\";\n\nclass Cards extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"cards-section my-1 py-6 flex -mx-2 mx-auto flex-wrap\">\n          <bookContext.Consumer>\n            {({ state }) => (\n              <React.Fragment>\n                {state.Data.books.map(book => (\n                  <Card key={book.id} {...book} />\n                ))}\n              </React.Fragment>\n            )}\n          </bookContext.Consumer>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Cards;\n","import React from \"react\";\nimport Navbar from \"./components/navbar/navbar.component\";\nimport Cards from \"./components/cards/cards.components\";\nimport BookProvider from \"./context/bookContext\";\nimport ThemeProvider from \"./context/themeContext\";\n\nimport { themeContext } from \"./context/themeContext\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BookProvider>\n        <ThemeProvider>\n          <themeContext.Consumer>\n            {({ state, onChangeTheme }) => {\n              return (\n                <React.Fragment>\n                  <div className={`app ${state.bgColor}`}>\n                    <Navbar />\n                    <button\n                      className={`inline-block bg-gray-900 hover:bg-gray-700 shadow-lg rounded-lg px-4 py-2 text-md font-semibold text-gray-200 mr-2`}\n                      onClick={() => onChangeTheme(\"dark\")}\n                    >\n                      Dark\n                    </button>\n                    <button\n                      className={`inline-block bg-green-600 hover:bg-green-500 shadow-lg rounded-lg px-4 py-2 text-md font-semibold text-gray-200 mr-2`}\n                      onClick={() => onChangeTheme(\"green\")}\n                    >\n                      Green\n                    </button>\n                    <div className=\"container mx-auto\">\n                      <Cards />\n                    </div>\n                  </div>\n                </React.Fragment>\n              );\n            }}\n          </themeContext.Consumer>\n        </ThemeProvider>\n      </BookProvider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n    document.querySelector('#root')\n)"],"sourceRoot":""}